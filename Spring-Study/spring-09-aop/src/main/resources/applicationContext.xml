<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--注册bean-->
    <bean id="userService" class="com.my.service.UserServiceImpl"/>
    <!--<bean id="BeforeLog" class="com.my.log.BeforeLog"/>
    <bean id="AfterLog" class="com.my.log.AfterLog"/>-->

    <!--方式三使用注解-->
    <bean id="AnnotationPointCut" class="com.my.Diy.AnnotationPointCut"/>
    <!--开启注解支持-->
    <aop:aspectj-autoproxy/>



    <!--方式一使用原生API-->
   <!-- 配置AOP需要导入aop的约束-->
   <!-- <aop:config>
      &lt;!&ndash;  切入点: expression:表达式 ,execution(要执行的位置)  &ndash;&gt;
        <aop:pointcut id="head" expression="execution(* com.my.service.UserServiceImpl.*(..))"/>

        &lt;!&ndash;执行环绕增加！&ndash;&gt;
        <aop:advisor advice-ref="BeforeLog" pointcut-ref="head"/>&lt;!&ndash;切入位置，哪个类切入到哪里&ndash;&gt;
        <aop:advisor advice-ref="AfterLog" pointcut-ref="head"/>
    </aop:config>-->

    <!--方式二自定义类-->
    <!--<bean id="diy" class="com.my.Diy.DiyPointCut"/>

    <aop:config>
        &lt;!&ndash;自定义切面，ref要引用的类&ndash;&gt;
        <aop:aspect ref="diy">
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="point" expression="execution(* com.my.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>-->





</beans>